Pre-meeting:

  allow breaking out of command loop on robot
  return values of some commands are being reported strangely, test with robot.up() etc
  update readme

  Scanner:
    write function to scan a horizontal plane
    update format used to send data (add width, depth, y coordinate)
    have robot mark itself in scans

  Renderer:
    color cubes based on hardness

  Add buttons for commonly used robot commands (i.e. forward, back, place, dig)

  add dead reckoning for robots
  send new scan data after moving
    write function to scan 3 columns in front or behind
    for up or down, send the whole layer
    buttons for movement with scanning and movement without scanning

Post-meeting:

  stop command input from sending on blur (caused by using change event)

  scanner:
    make the data format smaller? (i.e. ignore 0's)
    send scans in smaller batches
    see if code can be optimized to use less memory

  renderer:
    display coordinates of the voxel being looked at

  mapping:
    Set up database
    persistent server side maps that robots can read
    add ability to send scans to different maps
    detect maximum scan batch size based on available memory
    don't add to the scene any voxels which are surrounded?

  Add ability to send commands to different robots
  Add password to commands, different per robot
    store hashed password with random salt in db
    also store hash on robot, check only that hash for commands

  display contents of robot inventory and current selected space


distant future:
  implement minecraft player style inventory manipulation on web-client
  prediction for inventory and movement?
  blueprint storage and rendering
  neural network to help predict block ids from hardness maps
